apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: keycloaks.keycloak.org
spec:
  group: keycloak.org
  names:
    kind: Keycloak
    listKind: KeycloakList
    plural: keycloaks
    singular: keycloak
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Keycloak is the Schema for the keycloaks API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KeycloakSpec defines the desired state of Keycloak.
          properties:
            extensions:
              description: A list of extensions, where each one is a URL to a JAR
                files that will be deployed in Keycloak.
              items:
                type: string
              type: array
              x-kubernetes-list-type: set
            externalAccess:
              description: Controls external Ingress/Route settings.
              properties:
                enabled:
                  description: If set to true, the Operator will create an Ingress
                    or a Route pointing to Keycloak.
                  type: boolean
                tlsTermination:
                  description: TLS Termination type for the external access. Setting
                    this field to "reencrypt" will terminate TLS on the Ingress/Route
                    level. Setting this field to "passthrough" will send encrypted
                    traffic to the Pod. If unspecified, defaults to "reencrypt". Note,
                    that this setting has no effect on Ingress as Ingress TLS settings
                    are not reconciled by this operator. In other words, Ingress TLS
                    configuration is the same in both cases and it is up to the user
                    to configure TLS section of the Ingress.
                  type: string
              type: object
            externalDatabase:
              description: "Controls external database settings. Using an external
                database requires providing a secret containing credentials as well
                as connection details. Here's an example of such secret: \n     apiVersion:
                v1     kind: Secret     metadata:         name: keycloak-db-secret
                \        namespace: keycloak     stringData:         POSTGRES_DATABASE:
                <Database Name>         POSTGRES_EXTERNAL_ADDRESS: <External Database
                IP or URL (resolvable by K8s)>         POSTGRES_EXTERNAL_PORT: <External
                Database Port>         # Strongly recommended to use <'Keycloak CR
                Name'-postgresql>         POSTGRES_HOST: <Database Service Name>         POSTGRES_PASSWORD:
                <Database Password>         # Required for AWS Backup functionality
                \        POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: <Database
                Username>      type: Opaque \n Both POSTGRES_EXTERNAL_ADDRESS and
                POSTGRES_EXTERNAL_PORT are specifically required for creating connection
                to the external database. The secret name is created using the following
                convention:       <Custom Resource Name>-db-secret \n For more information,
                please refer to the Operator documentation."
              properties:
                enabled:
                  description: If set to true, the Operator will use an external database.
                    pointing to Keycloak.
                  type: boolean
              type: object
            instances:
              description: Number of Keycloak instances in HA mode. Default is 1.
              type: integer
            keycloakDeploymentSpec:
              description: Resources (Requests and Limits) for KeycloakDeployment.
              properties:
                envVars:
                  additionalProperties:
                    type: string
                  description: Container Environment variables
                  type: object
                livenessProbe:
                  description: Probes (Liveness and Readiness) for the Pods
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                podAnnotations:
                  additionalProperties:
                    type: string
                  description: Pod Annotations
                  type: object
                readinessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                resources:
                  description: Resources (Requests and Limits) for the Pods.
                  properties:
                    limits:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
              type: object
            migration:
              description: Specify Migration configuration
              properties:
                backups:
                  description: Set it to config backup policy for migration
                  properties:
                    enabled:
                      description: If set to true, the operator will do database backup
                        before doing migration
                      type: boolean
                  type: object
              type: object
            podDisruptionBudget:
              description: Specify PodDisruptionBudget configuration.
              properties:
                enabled:
                  description: If set to true, the operator will create a PodDistruptionBudget
                    for the Keycloak deployment and set its `maxUnavailable` value
                    to 1.
                  type: boolean
              type: object
            postgresDeploymentSpec:
              description: Resources (Requests and Limits) for PostgresDeployment.
              properties:
                envVars:
                  additionalProperties:
                    type: string
                  description: Container Environment variables
                  type: object
                livenessProbe:
                  description: Probes (Liveness and Readiness) for the Pods
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                podAnnotations:
                  additionalProperties:
                    type: string
                  description: Pod Annotations
                  type: object
                readinessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                resources:
                  description: Resources (Requests and Limits) for the Pods.
                  properties:
                    limits:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
              type: object
            profile:
              description: Profile used for controlling Operator behavior. Default
                is empty.
              type: string
            serviceAnnotations:
              additionalProperties:
                type: string
              description: Service annotations
              type: object
            storageCapacity:
              description: Storage Size for Postgresql Persistent Volume Claim
              type: string
            storageClassName:
              description: Name of the StorageClass for Postgresql Persistent Volume
                Claim
              type: string
          type: object
        status:
          description: KeycloakStatus defines the observed state of Keycloak.
          properties:
            credentialSecret:
              description: The secret where the admin credentials are to be found.
              type: string
            internalURL:
              description: Service IP and Port for in-cluster access to the keycloak
                instance.
              type: string
            message:
              description: Human-readable message indicating details about current
                operator phase or error.
              type: string
            phase:
              description: Current phase of the operator.
              type: string
            ready:
              description: True if all resources are in a ready state and all work
                is done.
              type: boolean
            secondaryResources:
              additionalProperties:
                items:
                  type: string
                type: array
              description: 'A map of all the secondary resources types and names created
                for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2"
                ].'
              type: object
            version:
              description: Version of Keycloak or RHSSO running on the cluster.
              type: string
          required:
          - credentialSecret
          - internalURL
          - message
          - phase
          - ready
          - version
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
