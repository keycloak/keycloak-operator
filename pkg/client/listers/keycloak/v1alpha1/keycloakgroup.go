// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/keycloak/keycloak-operator/pkg/apis/keycloak/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KeycloakGroupLister helps list KeycloakGroups.
// All objects returned here must be treated as read-only.
type KeycloakGroupLister interface {
	// List lists all KeycloakGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KeycloakGroup, err error)
	// KeycloakGroups returns an object that can list and get KeycloakGroups.
	KeycloakGroups(namespace string) KeycloakGroupNamespaceLister
	KeycloakGroupListerExpansion
}

// keycloakGroupLister implements the KeycloakGroupLister interface.
type keycloakGroupLister struct {
	indexer cache.Indexer
}

// NewKeycloakGroupLister returns a new KeycloakGroupLister.
func NewKeycloakGroupLister(indexer cache.Indexer) KeycloakGroupLister {
	return &keycloakGroupLister{indexer: indexer}
}

// List lists all KeycloakGroups in the indexer.
func (s *keycloakGroupLister) List(selector labels.Selector) (ret []*v1alpha1.KeycloakGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KeycloakGroup))
	})
	return ret, err
}

// KeycloakGroups returns an object that can list and get KeycloakGroups.
func (s *keycloakGroupLister) KeycloakGroups(namespace string) KeycloakGroupNamespaceLister {
	return keycloakGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KeycloakGroupNamespaceLister helps list and get KeycloakGroups.
// All objects returned here must be treated as read-only.
type KeycloakGroupNamespaceLister interface {
	// List lists all KeycloakGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KeycloakGroup, err error)
	// Get retrieves the KeycloakGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.KeycloakGroup, error)
	KeycloakGroupNamespaceListerExpansion
}

// keycloakGroupNamespaceLister implements the KeycloakGroupNamespaceLister
// interface.
type keycloakGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KeycloakGroups in the indexer for a given namespace.
func (s keycloakGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KeycloakGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KeycloakGroup))
	})
	return ret, err
}

// Get retrieves the KeycloakGroup from the indexer for a given namespace and name.
func (s keycloakGroupNamespaceLister) Get(name string) (*v1alpha1.KeycloakGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("keycloakgroup"), name)
	}
	return obj.(*v1alpha1.KeycloakGroup), nil
}
