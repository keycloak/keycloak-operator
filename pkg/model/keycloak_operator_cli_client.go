package model

import (
	kc "github.com/keycloak/keycloak-operator/pkg/apis/keycloak/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

func KeycloakOperatorCLIClient(cr *kc.KeycloakRealm) *kc.KeycloakClient {
	return &kc.KeycloakClient{
		ObjectMeta: metav1.ObjectMeta{
			Name:      cr.Name + "-operator-cli",
			Namespace: cr.Namespace,
			Labels:    cr.Labels,
		},
		Spec: kc.KeycloakClientSpec{
			RealmSelector: &kc.RealmSelector{
				MatchLabels: cr.Labels,
				RealmName:   cr.Spec.Realm.Realm,
			},
			Client: &kc.KeycloakAPIClient{
				ClientID:               cr.Name + "-operator-cli",
				ServiceAccountsEnabled: true,
				DefaultRoles:           []string{"admin", "create-realm"},
			},
			Managed: kc.Autogenerated,
		},
	}
}

func KeycloakOperatorCLIClientSelector(cr *kc.KeycloakRealm) client.ObjectKey {
	return client.ObjectKey{
		Name:      cr.Name + "-operator-cli",
		Namespace: cr.Namespace,
	}
}

func KeycloakOperatorCLIClientReconciled(cr *kc.KeycloakRealm, currentState *kc.KeycloakClient) *kc.KeycloakClient {
	reconciled := currentState.DeepCopy()
	reconciled.Spec.Client.ClientID = cr.Name + "-operator-cli"
	reconciled.Spec.Client.ServiceAccountsEnabled = true
	reconciled.Spec.Client.DefaultRoles = []string{"admin", "create-realm"}
	return reconciled
}
